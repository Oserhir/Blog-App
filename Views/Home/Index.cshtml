﻿@using TheBlogProject.Enums
@using TheBlogProject.Models
@using TheBlogProject.Services.Interfaces
@using Microsoft.AspNetCore.Identity
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common

@inject IImageService _imageService
@inject UserManager<BTUser> _userManager

@model IPagedList<Blog>

@{
    ViewData["Title"] = "Home Page";
}

<div class="row ms-1 me-1 justify-content-center">

    <div class="row justify-content-center">
        @*<div class="col-sm-12 col-md-6 col-lg-4"></div>*@
        <div class="col-sm-12 col-md-6 col-lg-4 mt-2 text-center">
            <a class="btn btn-dark btn-sm btn-block bg-secondary shadow mb-2" asp-action="AllPostIndex" asp-controller="Posts">
                View All Posts
            </a>
        </div>
    </div>

    @foreach (var blog in Model)
    {
            <div class="col-12 col-md-6 col-lg-4 mt-4">
                <div class="card border-dark bg-transparent shadow">
                    <div class="card-img" style="background-image: url(@_imageService.DecodeImage(blog.ImageData, blog.ImageType))">
                        <div class="container position-relative px-4">
                            <div class="bg-blog-title text-center">
                                <hr class="card-hr">
                                <h5 class="card-title text-light">@blog.Name</h5>
                                <hr class="card-hr">
                            </div>
                        </div>
                    </div>

                    <div class="m-4 text-center">
                        <div>
                            <div class="card-text cftooltip"
                             data-toggle="tooltip"
                             data-placement="top"
                             title=""
                             data-original-title="@blog.Description">
                            @blog.Description <br /> -
                            </div>
                        </div>

                        <div class="text-center mt-4">
                            <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="BlogPostIndex" asp-controller="Posts" asp-route-id="@blog.Id">
                                Read Posts
                            </a>
                        </div>

                    @if (User.IsInRole(BlogRole.Administrator.ToString()))
                    {
                                <div class="text-center">
                                    <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Create" asp-controller="Posts" asp-route-id="@blog.Id">
                                        Create Post
                                    </a>
                                </div>
                    }

                    @if (User.IsInRole(BlogRole.Administrator.ToString()))
                    {
                                <div class="text-center">
                                    <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Edit" asp-controller="Blogs" asp-route-id="@blog.Id">
                                        Edit Blog
                                    </a>
                                </div>
                    }

                    </div>
                </div>
            </div>

            <!-- Need to format string here since value is nullable-->
        @* string formattedDate = @blog.Created.HasValue ? @blog.Created.Value.ToString("dd-MMM-yyyy") : "<not available>";*@

    }

</div>


<!-- Add paging controls here-->
<div class="row mt-4">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
@*<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page}),
        new PagedListRenderOptionsBase
        {
        LiElementClasses = new string[] { "page-item"},
        PageClasses = new string[] { "page-link"}
        })
    </div>
</div>*@

@*@section Scripts {
    <script>
    var swalMsg = '@TempData["SweetAlert"]'
    if (swalMsg != "") {
    Swal.fire({
    icon: 'success',
    title: swalMsg,
    timer: 2500
    })
    }

    $(document).ready(function () {
    $("p").tooltip();
    });

    </script>
    }*@